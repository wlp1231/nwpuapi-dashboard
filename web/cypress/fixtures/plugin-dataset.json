{
  "basic-auth": [
    {
      "type": "consumer",
      "shouldValid": true,
      "data": {
        "username": "foo",
        "password": "bar"
      }
    },
    {
      "type": "consumer",
      "shouldValid": false,
      "data": {
        "username": 123,
        "password": "bar"
      }
    },
    {
      "type": "consumer",
      "shouldValid": false,
      "data": {
        "username": "foo"
      }
    },
    {
      "type": "consumer",
      "shouldValid": false,
      "data": {}
    },
    {
      "type": "consumer",
      "shouldValid": false,
      "data": "blah"
    },
    {
      "shouldValid": true,
      "data": {}
    }
  ],
  "jwt-auth": [
    {
      "shouldValid": true,
      "data": {}
    }
  ],
  "key-auth": [
    {
      "shouldValid": true,
      "data": {}
    }
  ],
  "api-breaker": [
    {
      "shouldValid": true,
      "data": {
        "break_response_code": 502,
        "break_response_body": "{\"message\":\"breaker opened.\"}",
        "break_response_headers": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Content-Type", "value": "application/json+v1" }
        ],
        "unhealthy": {
          "http_statuses": [500],
          "failures": 1
        },
        "healthy": {
          "http_statuses": [200],
          "successes": 1
        }
      }
    },
    {
      "shouldValid": true,
      "data": {
        "break_response_code": 502
      }
    },
    {
      "shouldValid": true,
      "data": {
        "break_response_code": 502,
        "healthy": {}
      }
    },
    {
      "shouldValid": true,
      "data": {
        "break_response_code": 502,
        "unhealthy": {}
      }
    },
    {
      "shouldValid": false,
      "data": {
        "break_response_code": 199,
        "unhealthy": {
          "http_statuses": [500, 503],
          "failures": 3
        },
        "healthy": {
          "http_statuses": [200, 206],
          "successes": 3
        }
      }
    },
    {
      "shouldValid": false,
      "data": {
        "break_response_code": 200,
        "max_breaker_sec": -1
      }
    },
    {
      "shouldValid": false,
      "data": {
        "break_response_code": 200,
        "max_breaker_sec": 40,
        "unhealthy": {
          "http_statuses": [500, 603],
          "failures": 3
        },
        "healthy": {
          "http_statuses": [200, 206],
          "successes": 3
        }
      }
    },
    {
      "shouldValid": false,
      "data": {
        "break_response_code": 500,
        "unhealthy": {
          "http_statuses": [500, 503],
          "failures": 3
        },
        "healthy": {
          "http_statuses": [206, 206],
          "successes": 3
        }
      }
    },
    {
      "shouldValid": true,
      "data": {
        "break_response_code": 599,
        "unhealthy": {
          "http_statuses": [500, 503],
          "failures": 3
        },
        "healthy": {
          "http_statuses": [200, 206],
          "successes": 3
        }
      }
    },
    {
      "shouldValid": true,
      "data": {
        "break_response_code": 502,
        "unhealthy": {
          "failures": 3
        },
        "healthy": {
          "successes": 3
        }
      }
    },
    {
      "shouldValid": true,
      "data": {
        "break_response_code": 502,
        "max_breaker_sec": 10,
        "unhealthy": {
          "http_statuses": [500, 503],
          "failures": 1
        },
        "healthy": {
          "successes": 3
        }
      }
    }
  ],
  "consumer-restriction": [
    {
      "shouldValid": true,
      "data": {
        "title": "whitelist",
        "whitelist": ["jack1", "jack2"]
      }
    },
    {
      "shouldValid": true,
      "data": {
        "whitelist": ["jack1"],
        "blacklist": ["jack2"]
      }
    }
  ],
  "cors": [
    {
      "shouldValid": true,
      "data": {
        "allow_origins": "*",
        "allow_methods": "*",
        "allow_headers": "*",
        "expose_headers": "*",
        "max_age": 5,
        "allow_credential": false
      }
    },
    {
      "shouldValid": false,
      "data": {
        "allow_origins": "",
        "allow_methods": "",
        "allow_headers": "",
        "expose_headers": "",
        "max_age": "600",
        "allow_credential": true
      }
    }
  ],
  "echo": [],
  "fault-injection": [
    {
      "shouldValid": false,
      "data": {
        "abort": {
          "http_status": 100,
          "body": "Fault Injection!\n"
        }
      }
    },
    {
      "shouldValid": false,
      "data": {
        "abort": {}
      }
    },
    {
      "shouldValid": false,
      "data": {}
    },
    {
      "shouldValid": false,
      "data": {
        "delay": {}
      }
    },
    {
      "shouldValid": false,
      "data": {
        "delay": {
          "duration": "test"
        }
      }
    }
  ],
  "grpc-transcode": [],
  "http-logger": [
    {
      "shouldValid": true,
      "data": {
        "uri": "http://127.0.0.1"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "http://127.0.0.1",
        "auth_header": "Basic 123",
        "timeout": 3,
        "name": "http-logger",
        "max_retry_count": 2,
        "retry_delay": 2,
        "buffer_duration": 2,
        "inactive_timeout": 2,
        "batch_max_size": 500
      }
    },
    {
      "shouldValid": false,
      "data": {
        "auth_header": "Basic 123",
        "timeout": 3,
        "name": "http-logger",
        "max_retry_count": 2,
        "retry_delay": 2,
        "buffer_duration": 2,
        "inactive_timeout": 2,
        "batch_max_size": 500
      }
    }
  ],
  "ip-restriction": [
    {
      "shouldValid": true,
      "data": {
        "whitelist": ["10.255.254.0/24", "192.168.0.0/16"]
      }
    },
    {
      "shouldValid": false,
      "data": {
        "whitelist": ["10.255.256.0/24", "192.168.0.0/16"]
      }
    },
    {
      "shouldValid": false,
      "data": {
        "whitelist": ["10.255.254.0/38", "192.168.0.0/16"]
      }
    },
    {
      "shouldValid": false,
      "data": {}
    },
    {
      "shouldValid": false,
      "data": {
        "blacklist": []
      }
    },
    {
      "shouldValid": false,
      "data": {
        "whitelist": ["172.17.40.0/24"],
        "blacklist": ["10.255.0.0/16"]
      }
    },
    {
      "shouldValid": true,
      "data": {
        "blacklist": ["::1", "fe80::/32"]
      }
    }
  ],
  "limit-conn": [
    {
      "shouldValid": true,
      "data": {
        "conn": 1,
        "burst": 0,
        "default_conn_delay": 0.1,
        "key": "remote_addr"
      }
    },
    {
      "shouldValid": false,
      "data": {
        "conn": 1,
        "default_conn_delay": 0.1,
        "key": "remote_addr"
      }
    },
    {
      "shouldValid": false,
      "data": {
        "conn": 1,
        "burst": -1,
        "default_conn_delay": 0.1,
        "key": "remote_addr"
      }
    },
    {
      "shouldValid": false,
      "data": {
        "conn": -1,
        "burst": 1,
        "default_conn_delay": 0.1,
        "key": "remote_addr"
      }
    },
    {
      "shouldValid": false,
      "data": {
        "conn": 100,
        "burst": 50,
        "default_conn_delay": -1,
        "key": "server_addr"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "key": "consumer_name"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "rejected_code": 503,
        "key": "http_x_real_ip"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "rejected_code": 503,
        "key": "http_x_forwarded_for"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "key": "remote_addr"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "key": "server_addr"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "key": "server_addr",
        "rejected_code": 503,
        "rejected_msg": "test"
      }
    },
    {
      "shouldValid": false,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "key": "server_addr",
        "rejected_code": 600
      }
    },
    {
      "shouldValid": false,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "key": "server_addr",
        "rejected_msg": ""
      }
    },
    {
      "shouldValid": false,
      "data": {
        "conn": 5,
        "burst": 1,
        "default_conn_delay": 0.1,
        "key": "server_addr",
        "allow_degradation": 1
      }
    }
  ],
  "limit-count": [
    {
      "shouldValid": true,
      "data": {
        "count": 2,
        "time_window": 60,
        "rejected_code": 503,
        "key": "remote_addr",
        "policy": "local"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "count": 2,
        "time_window": 60,
        "rejected_code": 503,
        "key": "host",
        "policy": "local"
      }
    },
    {
      "shouldValid": false,
      "data": {
        "time_window": 60,
        "rejected_code": 503,
        "policy": "local"
      }
    },
    {
      "shouldValid": false,
      "data": {
        "count": -100,
        "time_window": 60,
        "rejected_code": 503,
        "key": "remote_addr",
        "policy": "local"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "count": 2,
        "time_window": 60,
        "rejected_code": 503,
        "key": "server_addr",
        "policy": "local"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "count": 2,
        "time_window": 60,
        "key": "remote_addr",
        "policy": "local"
      }
    }
  ],
  "zipkin": [
    {
      "shouldValid": true,
      "data": {
        "endpoint": "http://127.0.0.1",
        "sample_ratio": 0.001
      }
    },
    {
      "shouldValid": false,
      "data": {
        "endpoint": "http://127.0.0.1",
        "sample_ratio": -0.1
      }
    },
    {
      "shouldValid": false,
      "data": {
        "endpoint": "http://127.0.0.1",
        "sample_ratio": 2
      }
    }
  ],
  "prometheus": [
    {
      "shouldValid": true,
      "data": {}
    },
    {
      "shouldValid": true,
      "data": {
        "invalid": "invalid"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "invalid_property": 1
      }
    }
  ],
  "proxy-rewrite": [
    {
      "shouldValid": true,
      "data": {
        "uri": "/apisix/home",
        "host": "apisix.apache.org"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "/uri/plugin_proxy_rewrite",
        "headers": {
          "X-Api-Version": "v2"
        }
      }
    },
    {
      "shouldValid": true,
      "data": {
        "regex_uri": ["^/test/(.*)/(.*)/(.*)", "/$1_$2_$3"]
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "/hello",
        "regex_uri": ["^/test/(.*)", "/${1}1"]
      }
    },
    {
      "shouldValid": false,
      "data": {
        "uri": "home"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "/apisix/home",
        "host": "apisix.apache.org",
        "scheme": "http",
        "invalid_att": "invalid"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "/uri",
        "headers": {
          "x-api": "$remote_addr",
          "name": "$arg_name",
          "x-key": "$http_key"
        }
      }
    }
  ],
  "redirect": [
    {
      "shouldValid": true,
      "data": {
        "ret_code": 302,
        "uri": "/foo"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "/foo"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "$uri/test/a${arg_name}c",
        "ret_code": 302
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "/foo$$uri",
        "ret_code": 302
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "\\$uri/foo$uri\\$uri/bar",
        "ret_code": 301
      }
    },
    {
      "shouldValid": true,
      "data": {
        "uri": "https://$host$request_uri",
        "ret_code": 301
      }
    },
    {
      "shouldValid": true,
      "data": {
        "http_to_https": true
      }
    },
    {
      "shouldValid": true,
      "data": {
        "http_to_https": true,
        "ret_code": 302
      }
    }
  ],
  "traffic-split": [
    {
      "shouldValid": true,
      "data": {
        "rules": [
          {
            "match": [
              {
                "vars": [
                  ["arg_name", "==", "jack"],
                  ["arg_age", "!", "<", "16"]
                ]
              },
              {
                "vars": [
                  ["arg_name", "==", "rose"],
                  ["arg_age", "!", ">", "32"]
                ]
              }
            ],
            "weighted_upstreams": [
              {
                "upstream": {
                  "name": "upstream_A",
                  "type": "roundrobin",
                  "nodes": { "127.0.0.1:1981": 2 },
                  "timeout": { "connect": 15, "send": 15, "read": 15 }
                },
                "weight": 2
              },
              {
                "upstream": {
                  "name": "upstream_B",
                  "type": "roundrobin",
                  "nodes": { "127.0.0.1:1982": 2 },
                  "timeout": { "connect": 15, "send": 15, "read": 15 }
                },
                "weight": 2
              },
              {
                "weight": 1
              }
            ]
          }
        ]
      }
    },
    {
      "shouldValid": true,
      "data": {
        "rules": [
          {
            "weighted_upstreams": [
              {
                "upstream": {
                  "name": "upstream_A",
                  "type": "roundrobin",
                  "nodes": { "127.0.0.1:1981": 2 },
                  "timeout": { "connect": 15, "send": 15, "read": 15 }
                },
                "weight": 2
              },
              {
                "weight": 1
              }
            ]
          }
        ]
      }
    },
    {
      "shouldValid": true,
      "data": {
        "rules": [
          {
            "match": [
              {
                "vars": ["arg_name", 123, "jack"]
              }
            ],
            "weighted_upstreams": [
              {
                "upstream": {
                  "name": "upstream_A",
                  "type": "roundrobin",
                  "nodes": {
                    "127.0.0.1:1981": 2
                  },
                  "timeout": { "connect": 15, "send": 15, "read": 15 }
                },
                "weight": 2
              },
              {
                "weight": 1
              }
            ]
          }
        ]
      }
    }
  ],
  "mqtt-proxy": [],
  "dubbo-proxy": [
    {
      "shouldValid": true,
      "data": {
        "service_name": "org.apache.dubbo.backend.DemoService",
        "service_version": "0.0.0",
        "method": "hello"
      }
    },
    {
      "shouldValid": false,
      "data": {
        "service_name": "org.apache.dubbo.backend.DemoService",
        "method": "hello"
      }
    }
  ],
  "response-rewrite": [
    {
      "shouldValid": true,
      "data": {
        "body": "Hello world",
        "headers": {
          "X-Server-id": 3
        }
      }
    },
    {
      "shouldValid": false,
      "data": {
        "status_code": 599
      }
    },
    {
      "shouldValid": false,
      "data": {
        "body": 2,
        "headers": {
          "X-Server-id": "3"
        }
      }
    },
    {
      "shouldValid": true,
      "data": {
        "headers": {
          "X-Server-id": 3,
          "X-Server-status": "on",
          "Content-Type": ""
        },
        "body": "new body\n"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "body": "new body2\n"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "headers": {
          "Location": "https://www.apache.org"
        },
        "status_code": 302
      }
    },
    {
      "shouldValid": true,
      "data": {
        "body": "SGVsbG8K",
        "body_base64": true
      }
    },
    {
      "shouldValid": true,
      "data": {
        "body": "1",
        "body_base64": true
      }
    },
    {
      "shouldValid": true,
      "data": {
        "headers": {
          "X-Server-id": 3,
          "X-Server-status": "on",
          "Content-Type": ""
        },
        "body": "new body\n"
      }
    },
    {
      "shouldValid": true,
      "data": {
        "body": "Hello world",
        "headers": {
          "X-Server-id": 3
        },
        "invalid_att": "invalid"
      }
    }
  ]
}
